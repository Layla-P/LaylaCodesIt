@page "/blog"
@using GraphQL
@using GraphQL.Client.Http
@using System.Net.Http.Headers
@using Models
@using Newtonsoft.Json

@inject GraphQLHttpClient graphQlClient
@inject HttpClient http
@inject NavigationManager navigation
<!-- component -->
@if (blogs == null)
{
	<p>Loading...</p>
}
else
{
	<div>

		@foreach (Item item in blogs)
		{
			<h1>@item.title</h1>
		}
	</div>
}

@code {


	private Item[] blogs = null;



	protected override async Task OnInitializedAsync()
	{


		var res = await GetResponse();

		blogs = res.Data.articleCollection.items;

	}

	//https://graphql.contentful.com/content/v1/spaces/5gi0c2vvptsm/environments/master?access_token=Tk0jMX-Z6addZMiJpd0WR_wN57LBUv6oQOScfU2n3qA

	//private void SelectBlog(int blogId)
	//{
	//	//navigation.NavigateTo($"/blog/{blogId}");
	//}

	private async Task<GraphQLResponse<data>> GetResponse()
	{

		graphQlClient.HttpClient.DefaultRequestHeaders.Authorization
			= new AuthenticationHeaderValue("Bearer", "Tk0jMX-Z6addZMiJpd0WR_wN57LBUv6oQOScfU2n3qA");





		var articleRequest = new GraphQLRequest
		{
			Query = @"{ articleCollection {items{title } }}",
			OperationName = null
		};



		return await graphQlClient.SendQueryAsync<data>(articleRequest);
	}
}
@*{
	  articleCollection {
		items{
		  title
		  sys{
			id
		  }
		}
	  }
	  stefan: articleCollection(where :{
		title : "Dummy title"
	  }){
		items{
		  title
		  sys{
			id
		  }}
	  }
	}*@

@*{

	  stefan: articleCollection(where :{
		slug : "dummy-title"
	  }){
		items{
		  title
		  sys{
			id
		  }}
	  }
	}*@

@*{
  stefan: articleCollection(where: {slug: "dummy-title"}) {
    items {
      title
      sys {
        id
      }
      authorsCollection {
      items{
        name
        twitch
      }
    }
    }
  }
}*@
